{"data":{"id":"61fde8af251b8ae263b60105","code":"[{\"name\":\"main.py\",\"content\":\"#! /usr/bin/python3\\n# ScratchPY JSON\\ntry:\\n    import pygame\\nexcept ImportError:\\n    os.system(\\\"pip3 install pygame\\\")\\n    import pygame\\nimport json,_thread\\nimport os\\nos.system(\\\"ls\\\")\\nos.system(\\\"xstart\\\")\\ncode = {}\\ntry:\\n    import requests\\nexcept ImportError:\\n    os.system(\\\"pip3 install requests\\\")\\n    import requests\\nclass FakeOpen:\\n  def __init__(self,useless):\\n    a = requests.get(useless)\\n    b = requests.get(\\\"http://overflowexceptionerror.github.io/Website/scratchpy/local_assets.zip\\\",stream=True)\\n    from zipfile import ZipFile\\n    handle = open(\\\"local.zip\\\", \\\"wb\\\")\\n    for chunk in b.iter_content(chunk_size=512):\\n      if chunk:  # filter out keep-alive new chunks\\n        handle.write(chunk)\\n    handle.close()\\n    with ZipFile(\\\"local.zip\\\", 'r') as zipObj:\\n      zipObj.extractall('local')\\n    self.a = a\\n    pass\\n  def __enter__(self):\\n    return self\\n  def __exit__(self,u,r,s):\\n    print(u)\\n    print(self)\\n    print(r)\\n    print(s)\\n    pass\\n  def read(self):\\n    return self.a.text\\nwith FakeOpen('http://overflowexceptionerror.github.io/Website/scratchpy/users/test/cool.json') as f:\\n    data = json.load(f)\\n    code = data\\nif code[\\\"showForeverWindowOnly\\\"] == \\\"false\\\":\\n    window = pygame.display.set_mode((code[\\\"window\\\"][\\\"width\\\"],code[\\\"window\\\"][\\\"height\\\"]))\\n    pygame.display.set_caption(\\\"ScratchPY Client - \\\" + code[\\\"name\\\"] + \\\" by \\\" + code[\\\"publisher\\\"])\\nsprimages = []\\nsprites = []\\nfor sprite in code[\\\"sprites\\\"]:\\n    sprimages.append(pygame.image.load(code[sprite][\\\"image\\\"]))\\n    sprites.append(sprite)\\n# move(X,Y)=\\\"move\\\"\\n# goto(X,Y)=\\\"gotoPos\\\"\\n# when flag clicked=\\\"flagclicked\\\"\\n# when (x) happens=\\\"startgrp\\\"\\ncsx = 0\\ncsy = 0\\ncurrentVersion = 2\\nif code[\\\"version\\\"] < currentVersion:\\n    print(\\\"Warning: older code types may be incompatible with the current version.\\\")\\nif code[\\\"version\\\"] > currentVersion:\\n    print(\\\"Warning: newer scripts may use code objects incompatible with the current version.\\\")\\nfrom time import time\\ncutime = time()\\ntickSpeed = 5\\nclose = 0\\nticksPassed = 0\\nwaiting = 0\\ndef otherWorld(host,sprite):\\n    if code[sprite][\\\"script\\\"][host][\\\"version\\\"] > currentVersion:\\n        print(\\\"Warning: newer scripts may use code objects incompatible with the current version.\\\")\\n    if code[\\\"showForeverWindow\\\"] == \\\"true\\\" or code[\\\"showForeverWindowOnly\\\"] == \\\"true\\\":\\n        window2 = pygame.display.set_mode((code[sprite][\\\"script\\\"][host][\\\"window\\\"][\\\"width\\\"],code[sprite][\\\"script\\\"][host][\\\"window\\\"][\\\"height\\\"]),0,32)\\n        pygame.display.set_caption(code[sprite][\\\"script\\\"][host][\\\"window\\\"][\\\"title\\\"])\\n    while True:\\n        if code[\\\"showForeverWindow\\\"] == \\\"true\\\" or code[\\\"showForeverWindowOnly\\\"] == \\\"true\\\":\\n            window2.fill((255,255,255))\\n        for sprite in sprites:\\n            for thing in code[sprite][\\\"script\\\"][host][\\\"script\\\"]:\\n                if code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing]['type'] == \\\"startgrp\\\" and waiting == 0:\\n                    pass\\n                if code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing]['type'] == \\\"flag\\\" and waiting == 0:\\n                    pass\\n                if code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing]['type'] == \\\"moveto\\\" and waiting == 0:\\n                    code[sprite][\\\"pos\\\"][0] = code[sprite][\\\"script\\\"][thing][\\\"x\\\"]\\n                    code[sprite][\\\"pos\\\"][1] = code[sprite][\\\"script\\\"][thing][\\\"y\\\"]\\n                if code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing]['type'] == \\\"goto\\\" and waiting == 0:\\n                    print(\\\"GoTo is a depricated function.\\\")\\n                if code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing]['type'] == \\\"forever\\\" and waiting == 0:\\n                    print(\\\"Threading is not implemented yet. Are you running a newer version of code.json?\\\")\\n                if code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing]['type'] == \\\"wait\\\" and waiting == 0:\\n                    pygame.time.wait(code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing][\\\"seconds\\\"])\\n                if code[sprite][\\\"script\\\"][host][\\\"script\\\"][thing]['type'] == \\\"endgrp\\\" and waiting == 0:\\n                    pass\\n            if code[\\\"showForeverWindow\\\"] == \\\"true\\\" or code[\\\"showForeverWindowOnly\\\"] == \\\"true\\\":\\n                for sprit in sprimages:\\n                    window2.blit(sprit,(code[sprite][\\\"pos\\\"][0],code[sprite][\\\"pos\\\"][1]))\\n        if code[\\\"showForeverWindow\\\"] == \\\"true\\\" or code[\\\"showForeverWindowOnly\\\"] == \\\"true\\\":\\n            for e in pygame.event.get():\\n                if e.type == pygame.QUIT:\\n                    close = 1\\n                    exit()\\n            pygame.display.update()\\nfor sprite in sprites:\\n    for thing in code[sprite][\\\"script\\\"]:\\n        if code[sprite][\\\"script\\\"][thing][\\\"type\\\"] == \\\"startgrp\\\" and waiting == 0:\\n            pass\\n        if code[sprite][\\\"script\\\"][thing][\\\"type\\\"] == \\\"flag\\\" and waiting == 0:\\n            pass\\n        if code[sprite][\\\"script\\\"][thing][\\\"type\\\"] == \\\"moveto\\\" and waiting == 0:\\n            code[sprite][\\\"pos\\\"][0] = code[sprite][\\\"script\\\"][thing][\\\"x\\\"]\\n            code[sprite][\\\"pos\\\"][1] = code[sprite][\\\"script\\\"][thing][\\\"y\\\"]\\n        if code[sprite][\\\"script\\\"][thing][\\\"type\\\"] == \\\"goto\\\" and waiting == 0:\\n            print(\\\"GoTo is a depricated function.\\\")\\n        if code[sprite][\\\"script\\\"][thing][\\\"type\\\"] == \\\"forever\\\" and waiting == 0:\\n            try:\\n                _thread.start_new_thread(otherWorld,(thing,sprite),)\\n            except TypeError:\\n                print(\\\"A code mistake was made, and ScratchPy can\\\\'t continue running this block.\\\")\\n            # print(\\\"Threading is not implemented yet. Are you running a newer version of code.json?\\\")\\n        if code[sprite][\\\"script\\\"][thing][\\\"type\\\"] == \\\"wait\\\" and waiting == 0:\\n            pygame.time.wait(code[sprite][\\\"script\\\"][thing][\\\"seconds\\\"])\\n        if code[sprite][\\\"script\\\"][thing][\\\"type\\\"] == \\\"endgrp\\\" and waiting == 0:\\n            pass\\nwhile True:\\n    if code[\\\"showForeverWindowOnly\\\"] == \\\"false\\\":\\n        window.fill((255,255,255))\\n        for sprite in sprites:\\n            for sprit in sprimages:\\n                window.blit(sprit,(code[sprite][\\\"pos\\\"][0],code[sprite][\\\"pos\\\"][1]))\\n        for e in pygame.event.get():\\n            if e.type == pygame.QUIT:\\n                exit()\\n        pygame.display.update()\\n    if close == 1:\\n        exit()\\n\"}]","metrics":{},"shortCode":"f65ff232c3","lang":"pygame","lastUpdated":"2022-02-05T03:02:07.106Z","lastView":{},"name":"cool.json - WEB","snapshot":"https://trinket-snapshots.trinket.io/avatar-default.png","assets":[],"settings":{"autofocusEnabled":true,"testsEnabled":false,"astro_pi_mission_submission":false},"folder":{},"_owner":"61fde35b251b8ae263b5f3d3","username":"networkclassics285-6665","slug":"","published":false},"flash":{},"intercomAcquire":false}